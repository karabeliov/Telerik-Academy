1) upcase tag
Console.WriteLine("Please enter the text:");
string text = Console.ReadLine();

//string text = "We are living in a <upcase>yellow submarine</upcase>. We don't have <upcase>anything</upcase> else.";

while (text.IndexOf("<upcase>") != -1)
{
	int startIndex = text.IndexOf("<upcase>");
	int endIndex = text.IndexOf("</upcase>");
	string subText = text.Substring(startIndex + "<upcase>".Length, endIndex - startIndex - "<upcase>".Length);
	text= text.Replace("<upcase>" + subText + "</upcase>", subText.ToUpper());
}
Console.WriteLine("The new text is : {0}",text);

2)replace with ***
for (int i = 0; i < forbiddenWords.Length; i++)
{
	StringBuilder sb = new StringBuilder();
	sb.Append('*', forbiddenWords[i].Length);
	text = text.Replace(forbiddenWords[i] , sb.ToString());
}

3) take part of link
int indProtokol = input.IndexOf("://");
protokol = input.Substring(0, indProtokol);

int indexEndServer = input.IndexOf("/", indProtokol + "://".Length);
server = input.Substring(indProtokol + "://".Length, indexEndServer - indProtokol - "://".Length);

int days = (int)(secondDay - firstDay).TotalDays;


4)give email
string [] inputSplitted = input.Split(new char[] {' ',':','-', '?', ','}, StringSplitOptions.RemoveEmptyEntries);

foreach (var word  in inputSplitted)
{
	if (word.Contains('@')&& word.Contains('.'))
	{
		eMails.Add(word);
	}
}
Console.WriteLine(String.Join("\n", eMails));

5) Count letter
string text = Console.ReadLine();
char [] arr = text.ToCharArray();
int count = 1;
for (int i = 0; i < arr.Length; i++)
{
	if (char.IsLetter(arr[i]))
	{
	   for (int j = i+1; j < arr.Length ; j++)
		{
			if (arr[i] == arr[j])
			{
				count++;
				arr[j] = '0';
			}
		} 
		Console.WriteLine("Char {0}, is found {1} times", arr[i], count);
		count = 1;
	}
   }
}


6) count words
string text = "Write a program that reads a string from the console and lists all different words in the string along with information how many times each word is found.";
// string[,] wordsArray = new string[2, 2];
string[] splittedText = text.Split(' ', ',', '.', '!', '?');
int count = 1;
string start = splittedText[0];
string counted = "counted";
for (int i = 0; i < splittedText.Length - 1; i++)
{
	if ((splittedText[i] != counted))
	{
		for (int j = i; j < splittedText.Length - 1; j++)
		{
			if (splittedText[i] == splittedText[j + 1])
			{
				count++;
				splittedText[j + 1] = counted;
			}
		}
		Console.WriteLine(splittedText[i] + " " + count + " times.");
	}
	count = 1;
}

7) HTML remove tag
string input =  @"<html>  <head><title>News</title></head>  <body><p>
<a href=""http://academy.telerik.com"">Telerik Academy</a>aims to 
provide free real-world practical training for young people who want to turn
into skilful .NET software engineers.</p></body></html>";
            
if (input.IndexOf("<title>")!= -1)
{
	int titleStartIndex = input.IndexOf("<title>");
	int titleEndIndex = input.IndexOf("</title>");
	string title = input.Substring(titleStartIndex + "<title>".Length, titleEndIndex- titleStartIndex - "<title>".Length);
	Console.WriteLine("Title: " + title);
}
int bodyEndIndex = 0;
while (input.IndexOf("<body>",bodyEndIndex) != -1)
{
	int bodyStartIndex = input.IndexOf("<body>");
		bodyEndIndex = input.IndexOf("</body>");
		int aTagEndIndex = input.IndexOf("\">");
		string body = input.Substring(aTagEndIndex + "\">".Length, bodyEndIndex - aTagEndIndex - "\">".Length);
		string[] tags = { "<a>", "</a>", "<p>", "</p>" };
		for (int i = 0; i < tags.Length; i++)
		{
			body = body.Replace( tags[i], " ");
		}
	Console.WriteLine("Text: " + body);
}