ПРЕДИ ДА ЗАПОЧНА
Да създам local git repository или версии в папки
Добро прочитане на условието (едитване, оцветяване)
Да се билдва
namespace
Изкарваме в отделни файл класовете
Да се билдва
От къде стартира  програмата (main)
Да го ръннем 
Ако има код тествай (в релийс или в дебъг режим ако гърми)
Референции къде се извиква
Exception message
Хардкорване на входа (спестяване на време)
Използване на Watch, Immediate 
Debug настроиките (hit count) или настискане няколко пъти F5
Създаване на папки 
Създават се инстации в Main (там се използват)
Намаляване на скоупа на променливата
Създаване на конструктор автоматично от VS

АНАЛИЗИРАНЕ
	- Analyze Code Clones

STYLE COP (накрая доизпипване)
	- поправяй докато рефакторираш
Organizer usings -> remove unused and sord usings
	- pin на error list при поправяне на грешките от style cop
	- sort by description
	- CTRL + SHIFT + Y (старт на style cop)
	- Старт на Style cop преди да предадеш 

PATTERN
Factory
	- Създава обекти на база на параметри 
Lazy Loading
	- Създава инстанция само, когато се извиква
	вариант без параметри
		- Lazy<T>(() => return new T())
	вариант с параметри
		- private полета без да се иницялизират
		- проверка ако е null създай инстанция new
		  иначе изполвай инстацията от private полето
		  if(T = null) T = new T
		  T=T
Commant (групира подобни неща, код)
	- Interface имплементиран от различни класове
Strategy (даване на дипенданси)
	- създаване на конкретен клас
	- даване през конструктора
	- създаване на прайвет инстанция 
